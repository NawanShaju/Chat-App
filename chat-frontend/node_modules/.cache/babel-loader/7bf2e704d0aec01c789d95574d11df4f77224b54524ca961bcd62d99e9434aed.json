{"ast":null,"code":"var _jsxFileName = \"/Users/nawanshaju/Documents/Course/ChatApp/chat-frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport styles from \"../ChatRoom.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction ChatRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const username = \"User\" + Math.floor(Math.random() * 1000);\n  useEffect(() => {\n    socket.emit(\"joinRoom\", {\n      username,\n      room: roomId\n    });\n    axios.get(`http://localhost:5000/api/chat/rooms/${roomId}/messages`).then(res => setMessages(res.data));\n    socket.on(\"message\", msg => {\n      setMessages(prev => [...prev, msg]);\n      alert(`New message from ${msg.sender}: ${msg.content}`); // Simple notification\n    });\n    return () => {\n      socket.emit(\"leaveRoom\");\n      socket.off();\n    };\n  }, [roomId]);\n  const sendMessage = () => {\n    if (!message) return;\n    socket.emit(\"sendMessage\", {\n      room: roomId,\n      sender: username,\n      content: message\n    });\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messages,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 26\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"Fl1JYp4bfn2fzPmKvslzLTHaokI=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","axios","styles","jsxDEV","_jsxDEV","socket","ChatRoom","_s","roomId","messages","setMessages","message","setMessage","username","Math","floor","random","emit","room","get","then","res","data","on","msg","prev","alert","sender","content","off","sendMessage","className","chatContainer","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nawanshaju/Documents/Course/ChatApp/chat-frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport styles from \"../ChatRoom.module.css\";\n\nconst socket = io(\"http://localhost:5000\");\n\nfunction ChatRoom() {\n  const { roomId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const username = \"User\" + Math.floor(Math.random() * 1000);\n\n  useEffect(() => {\n    socket.emit(\"joinRoom\", { username, room: roomId });\n\n    axios.get(`http://localhost:5000/api/chat/rooms/${roomId}/messages`).then((res) => setMessages(res.data));\n\n    socket.on(\"message\", (msg) => {\n      setMessages((prev) => [...prev, msg]);\n      alert(`New message from ${msg.sender}: ${msg.content}`); // Simple notification\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\");\n      socket.off();\n    };\n  }, [roomId]);\n\n  const sendMessage = () => {\n    if (!message) return;\n    socket.emit(\"sendMessage\", { room: roomId, sender: username, content: message });\n    setMessage(\"\");\n  };\n\n  return (\n    <div className={styles.chatContainer}>\n      <div className={styles.messages}>\n        {messages.map((msg, index) => (\n          <p key={index}><strong>{msg.sender}:</strong> {msg.content}</p>\n        ))}\n      </div>\n      <input type=\"text\" placeholder=\"Type a message\" value={message} onChange={(e) => setMessage(e.target.value)} />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default ChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}