{"ast":null,"code":"var _jsxFileName = \"/Users/nawanshaju/Documents/Course/ChatApp/chat-frontend/src/components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction ChatRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const username = \"User\" + Math.floor(Math.random() * 1000);\n  useEffect(() => {\n    socket.emit(\"joinRoom\", {\n      username,\n      room: roomId\n    });\n    axios.get(`http://localhost:5000/api/chat/rooms/${roomId}/messages`).then(res => setMessages(res.data));\n    socket.on(\"message\", msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      socket.emit(\"leaveRoom\");\n      socket.off();\n    };\n  }, [roomId]);\n  const sendMessage = () => {\n    if (!message) return;\n    socket.emit(\"sendMessage\", {\n      room: roomId,\n      sender: username,\n      content: message\n    });\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 26\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatRoom, \"Fl1JYp4bfn2fzPmKvslzLTHaokI=\", false, function () {\n  return [useParams];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","axios","jsxDEV","_jsxDEV","socket","ChatRoom","_s","roomId","messages","setMessages","message","setMessage","username","Math","floor","random","emit","room","get","then","res","data","on","msg","prev","off","sendMessage","sender","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nawanshaju/Documents/Course/ChatApp/chat-frontend/src/components/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst socket = io(\"http://localhost:5000\");\n\nfunction ChatRoom() {\n  const { roomId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const username = \"User\" + Math.floor(Math.random() * 1000);\n\n  useEffect(() => {\n    socket.emit(\"joinRoom\", { username, room: roomId });\n\n    axios.get(`http://localhost:5000/api/chat/rooms/${roomId}/messages`).then((res) => setMessages(res.data));\n\n    socket.on(\"message\", (msg) => {\n      setMessages((prev) => [...prev, msg]);\n    });\n\n    return () => {\n      socket.emit(\"leaveRoom\");\n      socket.off();\n    };\n  }, [roomId]);\n\n  const sendMessage = () => {\n    if (!message) return;\n    socket.emit(\"sendMessage\", { room: roomId, sender: username, content: message });\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Chat Room</h2>\n      <div>\n        {messages.map((msg, index) => (\n          <p key={index}><strong>{msg.sender}:</strong> {msg.content}</p>\n        ))}\n      </div>\n      <input type=\"text\" placeholder=\"Type a message\" value={message} onChange={(e) => setMessage(e.target.value)} />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default ChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}